;;;; Varoun's .emacs

;;; Kill the toolbar
(when (fboundp 'tool-bar-mode)
  (tool-bar-mode -1))

;; mode line settings
(line-number-mode t)
(column-number-mode t)
(size-indication-mode t)

;; Newline at end of file
(setq require-final-newline t)

;; Wrap lines at 80 characters
(setq-default fill-column 80)

;;; UTF-8 related.
(prefer-coding-system 'utf-8)
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)


;;; Erlang
(add-to-list 'load-path "/opt/local/lib/erlang/lib/tools-3.4.1/emacs/")
(setq erlang-root-dir "/opt/local/lib/erlang/")
(add-to-list 'exec-path "/opt/local/lib/erlang/bin/")
(require 'erlang-start)


;;; MELPA
(require 'package)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)

;;; use-package
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

;;; Manual Load path
(add-to-list 'load-path "~/.emacs.d/lisp/")


;;;-----------------------------------------------------------------------------
;;; use-package based configs.
;;;-----------------------------------------------------------------------------

;;; Setup PATH correctly on MACs
(use-package exec-path-from-shell
  :if (memq window-system '(mac ns x))
  :ensure t
  :config
  (exec-path-from-shell-initialize))

;;; Elec pair
(use-package elec-pair
  :config
  (electric-pair-mode +1))

;; highlight the current line
(use-package hl-line
  :config
  (global-hl-line-mode +1))

;;; Autocompletion using Company
(use-package company
  :ensure t
  :init
  (add-hook 'after-init-hook 'global-company-mode)
  :config
  (setq company-dabbrev-downcase 0)
  (setq company-idle-delay 1.0)
  (setq company-minimum-prefix-length 1)
  (setq company-tooltip-align-annotations t))

;;; Helm
(use-package helm
  :ensure t
  :init
  (require 'helm-config)
  :config
  (global-set-key (kbd "M-x") #'helm-M-x)
  (global-set-key (kbd "C-x r b") #'helm-filtered-bookmarks)
  (global-set-key (kbd "C-x C-f") #'helm-find-files)
  (helm-mode 1))

;;; Projectile
(use-package projectile
  :ensure t
  :config
  (projectile-mode))

;;; Projectile + Helm
(use-package helm-projectile
  :ensure t
  :config
  (helm-projectile-on))

;;; Magit
(use-package magit
  :ensure t)

;;; Paredit
(use-package paredit
  :ensure t
  :config
  (add-hook 'emacs-lisp-mode-hook #'paredit-mode)
  ;; enable in the *scratch* buffer
  (add-hook 'lisp-interaction-mode-hook #'paredit-mode)
  (add-hook 'lisp-mode-hook #'paredit-mode)
  (add-hook 'eval-expression-minibuffer-setup-hook #'paredit-mode))

;;; Rainbow delimiters.
(use-package rainbow-delimiters
  :ensure t)

(use-package rainbow-mode
  :ensure t
  :config
  (add-hook 'prog-mode-hook #'rainbow-mode))

;;; Undo
(use-package undo-tree
  :ensure t
  :config
  ;; autosave the undo-tree history
  (setq undo-tree-history-directory-alist
        `((".*" . ,temporary-file-directory)))
  (setq undo-tree-auto-save-history t)
  (global-undo-tree-mode +1))

;;; Theme
(use-package zenburn-theme
  :ensure t
  :config
  (load-theme 'zenburn t))

;;; Cleanup whitespace
;; (use-package whitespace
;;   :init
;;   (dolist (hook '(prog-mode-hook text-mode-hook))
;;     (add-hook hook #'whitespace-mode))
;;   (add-hook 'before-save-hook #'whitespace-cleanup)
;;   :config
;;   (setq whitespace-line-column 80) ;; limit line length
;;   (setq whitespace-style '(face tabs empty trailing lines-tail)))


;;; Slime
(use-package slime
  :ensure t
  :config
  (setq inferior-lisp-program "/Users/varoun/apps/ccl/dx86cl64"))

;;; Geiser
(use-package geiser
  :ensure t
  :config
  (setq geiser-active-implementations '(chez mit))
  (setq geiser-mit-binary "/opt/mit-scheme/bin/mit-scheme"))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (geiser slime zenburn-theme undo-tree erlang rainbow-mode rainbow-delimiters paredit magit helm-projectile projectile helm company exec-path-from-shell use-package))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
